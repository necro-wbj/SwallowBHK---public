const fs = require('fs');
const Discord = require("discord.js");
const path = require("path");
const commandFiles = fs.readdirSync('./commands').filter(file => file.endsWith('.js'));
const commands_path = path.resolve('commands');
module.exports = (client, options) => {
  client.commands = new Discord.Collection();
  let prefix = '/'
  const DIL = {
    imageExtensions: new Set(require('./image-extensions.json').extensions),
    method: (options && options.method) || "link",
    serverWide: (options && typeof options.serverWide !== 'undefined' ? options && options.serverWide : false),
    channels: (options && options.channels) || [],
    logChannel: (options && options.logChannel) || "image-logs",
    logging: (options && typeof options.logging !== 'undefined' ? options && options.logging : false),
    guildID: options.guildID
  };
  DIL.isImage = (file_path) => {
    return DIL.imageExtensions.has(path.extname(file_path).slice(1).toLowerCase());
  };
  for (const file of commandFiles) {
    const command = require(`${commands_path}/${file}`);
    client.commands.set(command.name, command);
  }

  let log = true;
  client.on("message", msg => {
    if (msg.guild.id != DIL.guildID) return
    // 指令處理
    if (!msg.content.startsWith(prefix) || msg.author.bot) return;
    const args = msg.content.slice(prefix.length).split(' ');
    const command = args.shift().toLowerCase();
    if (command == 'jx3') {
      client.commands.get('jx3').execute(msg, args);
    }
    // 批量刪除
    if (command == "clear") {
      client.commands.get('clear').execute(msg, args);
    }
    // 投票
    if (command == "start") {
      client.commands.get('start').execute(msg, args);
    }
    //批量移動
    if (command == 'move') {
      if (args.length == 0) {
        msg.channel.send('功能: 批量移動人員到此頻道\n指令使用方式 `/move 要移動的語音頻道ID`');
      } else if (msg.member.voiceChannelID == undefined) {
        msg.channel.send("請先進入要移動到的頻道");
      }
      client.commands.get('move').execute(msg.member.voiceChannelID, msg, args);
    }

  });


  client.on("messageDelete", msg => {
    if (msg.author.bot) return
    if (!log) return
    let richEmbed = new Discord.RichEmbed();
    let send = false;
    if (msg.attachments.size > 0) {
      richEmbed.setTitle(`以瀏覽器開啟`)
      richEmbed.setImage(msg.attachments.first().proxyURL);
      richEmbed.setURL(msg.attachments.first().proxyURL);
      send = true;
    }
    if (msg.content != '') {
      richEmbed.addField("訊息內容:", msg.content);
      send = true;
    }
    if (send == true) {
      richEmbed.setAuthor(msg.member.displayName, msg.author.avatarURL);
      richEmbed.setDescription(`在${msg.channel}刪除了一則訊息`);
      richEmbed.setTimestamp('訊息發送時間: ' + msg.createdTimestamp);
      richEmbed.setColor(msg.member.displayColor);
      try {
        if (DIL.channels == msg.channel.id) {
          client.channels.get(DIL.logChannel).send(richEmbed);
        }
      } catch (error) {
        console.log(error);
      }
    }
  });

  client.on("messageUpdate", (oldMsg, newMsg) => {
    if (DIL.guildID != oldMsg.guild.id ||
      oldMsg.author.bot ||
      oldMsg.content == "" && newMsg.content == "" ||
      oldMsg.content == newMsg.content) return
    client.channels.get(DIL.logChannel).send(new Discord.RichEmbed()
      .setAuthor(oldMsg.member.displayName, oldMsg.author.avatarURL)
      .setTitle(`在#${oldMsg.channel.name} 修改了一則訊息`)
      .addField("修改前訊息:", oldMsg.content)
      .addField("修改後訊息:", newMsg.content, true)
      .setURL(newMsg.url)
    );
  });
  client.on("voiceStateUpdate", (oldMember, newMember) => {
    if (DIL.guildID != oldMember.guild.id ||
      DIL.guildID != newMember.guild.id ||
      oldMember.guild.bot ||
      newMember.guild.bot) return;
    if (newMember.voiceChannel == undefined) {
      client.channels.get(DIL.logChannel).send('__' + newMember.displayName + '__' + '離開了語音頻道');
      // console.log('__' + newMember.displayName + '__' + '離開了語音頻道');
    } else if (oldMember.voiceChannel != newMember.voiceChannel) {
      client.channels.get(DIL.logChannel).send('__' + newMember.displayName + '__' + '進入了:sound: ' + newMember.voiceChannel.name);
      // console.log('__'+newMember.displayName+'__'+'進入了:sound: ' + newMember.voiceChannel.name);
    }
  })

};

//圖片備份

// client.on("message", (msg) => {
//   if (msg.author.bot || !msg.guild || !msg.attachments) return;
//   var a = msg.attachments;
//   var attachments = [];
//   a.forEach(e => {
//     if (DIL.isImage(e.filename)) attachments.push(e);
//   });
//   if (attachments.length <= 0) return;

//   if (!DIL.channels.includes(msg.channel.id) && !DIL.channels.includes(msg.channel.name) && !DIL.serverWide) return;

//   const logchan = msg.guild.channels.has(DIL.logChannel) ? msg.guild.channels.get(DIL.logChannel) : msg.guild.channels.find(c => c.name.toLowerCase() == DIL.logChannel.toLowerCase());
//   if (!logchan) {
//     if (DIL.logging) console.log(`[IMG_LOGGER] Couldn't find a logging channel for ${msg.guild.name} (${msg.guild.id})`);
//     return;
//   };

//   if (DIL.method === "link") {
//     const links = [];
//     let index = 0;
//     attachments.forEach(e => {
//       index++;
//       links.push(`**${index})** \`${e.url}\``);
//     });
//     logchan.send(`__New Image(s) Uploaded In #${msg.channel.name}__\nUser: ${msg.author}\n${links.join("\n")}`).catch(console.log);
//   } else if (DIL.method === "embed") {
//     const embed = new Discord.RichEmbed();
//     embed.setAuthor(msg.author.username, msg.author.displayAvatarURL);
//     if (attachments.length == 1) embed.setFooter(`New Upload: #${msg.channel.name}`);
//     if (attachments.length > 1) embed.setFooter(`New Uploads: #${msg.channel.name}`);
//     embed.setImage(attachments[0].url);
//     attachments.forEach(at => {
//       embed.addField(at.filename, at.url);
//     });
//     embed.setColor("DARK_PURPLE");
//     logchan.send({
//       embed
//     }).catch(console.log);
//   };
// });